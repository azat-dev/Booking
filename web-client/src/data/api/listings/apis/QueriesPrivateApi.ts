/* tslint:disable */
/* eslint-disable */
/**
 * Listings API
 * Describes the API of Listings service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetListingPrivateDetailsResponse,
  ListingPrivateDetails,
} from '../models/index';
import {
    GetListingPrivateDetailsResponseFromJSON,
    GetListingPrivateDetailsResponseToJSON,
    ListingPrivateDetailsFromJSON,
    ListingPrivateDetailsToJSON,
} from '../models/index';

export interface GetListingPrivateDetailsRequest {
    listingId: string;
}

/**
 * 
 */
export class QueriesPrivateApi extends runtime.BaseAPI {

    /**
     * Get private details for listing
     */
    async getListingPrivateDetailsRaw(requestParameters: GetListingPrivateDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetListingPrivateDetailsResponse>> {
        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling getListingPrivateDetails().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/private/listings/{listingId}`.replace(`{${"listingId"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetListingPrivateDetailsResponseFromJSON(jsonValue));
    }

    /**
     * Get private details for listing
     */
    async getListingPrivateDetails(requestParameters: GetListingPrivateDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetListingPrivateDetailsResponse> {
        const response = await this.getListingPrivateDetailsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List own listings
     */
    async getOwnListingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ListingPrivateDetails>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/private/listings/own`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ListingPrivateDetailsFromJSON));
    }

    /**
     * List own listings
     */
    async getOwnListings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ListingPrivateDetails>> {
        const response = await this.getOwnListingsRaw(initOverrides);
        return await response.value();
    }

}
