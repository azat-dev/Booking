/* tslint:disable */
/* eslint-disable */
/**
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LoginByEmailRequestBody,
  LoginByEmailResponseBody,
  VerifyEmail400Response,
} from '../models/index';
import {
    LoginByEmailRequestBodyFromJSON,
    LoginByEmailRequestBodyToJSON,
    LoginByEmailResponseBodyFromJSON,
    LoginByEmailResponseBodyToJSON,
    VerifyEmail400ResponseFromJSON,
    VerifyEmail400ResponseToJSON,
} from '../models/index';

export interface LoginByEmailRequest {
    loginByEmailRequestBody: LoginByEmailRequestBody;
}

/**
 * 
 */
export class CommandsLoginApi extends runtime.BaseAPI {

    /**
     * Get a new pair of tokens by email (access, refresh)
     */
    async loginByEmailRaw(requestParameters: LoginByEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LoginByEmailResponseBody>> {
        if (requestParameters['loginByEmailRequestBody'] == null) {
            throw new runtime.RequiredError(
                'loginByEmailRequestBody',
                'Required parameter "loginByEmailRequestBody" was null or undefined when calling loginByEmail().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/auth/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginByEmailRequestBodyToJSON(requestParameters['loginByEmailRequestBody']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LoginByEmailResponseBodyFromJSON(jsonValue));
    }

    /**
     * Get a new pair of tokens by email (access, refresh)
     */
    async loginByEmail(requestParameters: LoginByEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LoginByEmailResponseBody> {
        const response = await this.loginByEmailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
