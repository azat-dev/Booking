/* tslint:disable */
/* eslint-disable */
/**
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  VerifyEmail200Response,
  VerifyEmail400Response,
} from '../models/index';
import {
    VerifyEmail200ResponseFromJSON,
    VerifyEmail200ResponseToJSON,
    VerifyEmail400ResponseFromJSON,
    VerifyEmail400ResponseToJSON,
} from '../models/index';

export interface VerifyEmailRequest {
    token: string;
}

/**
 * 
 */
export class CommandsEmailVerificationApi extends runtime.BaseAPI {

    /**
     * Send email for verification
     */
    async verifyEmailRaw(requestParameters: VerifyEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VerifyEmail200Response>> {
        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling verifyEmail().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/public/verify-email`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => VerifyEmail200ResponseFromJSON(jsonValue));
    }

    /**
     * Send email for verification
     */
    async verifyEmail(requestParameters: VerifyEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VerifyEmail200Response> {
        const response = await this.verifyEmailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
