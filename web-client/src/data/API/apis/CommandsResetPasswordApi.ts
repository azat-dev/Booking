/* tslint:disable */
/* eslint-disable */
/**
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CompleteResetPassword200Response,
  CompleteResetPasswordRequestBody,
  ResetPasswordByEmail200Response,
  ResetPasswordByEmailRequestBody,
  VerifyEmail400Response,
} from '../models/index';
import {
    CompleteResetPassword200ResponseFromJSON,
    CompleteResetPassword200ResponseToJSON,
    CompleteResetPasswordRequestBodyFromJSON,
    CompleteResetPasswordRequestBodyToJSON,
    ResetPasswordByEmail200ResponseFromJSON,
    ResetPasswordByEmail200ResponseToJSON,
    ResetPasswordByEmailRequestBodyFromJSON,
    ResetPasswordByEmailRequestBodyToJSON,
    VerifyEmail400ResponseFromJSON,
    VerifyEmail400ResponseToJSON,
} from '../models/index';

export interface CompleteResetPasswordRequest {
    completeResetPasswordRequestBody: CompleteResetPasswordRequestBody;
}

export interface ResetPasswordByEmailRequest {
    resetPasswordByEmailRequestBody: ResetPasswordByEmailRequestBody;
}

/**
 * 
 */
export class CommandsResetPasswordApi extends runtime.BaseAPI {

    /**
     * Reset password by email
     */
    async completeResetPasswordRaw(requestParameters: CompleteResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompleteResetPassword200Response>> {
        if (requestParameters['completeResetPasswordRequestBody'] == null) {
            throw new runtime.RequiredError(
                'completeResetPasswordRequestBody',
                'Required parameter "completeResetPasswordRequestBody" was null or undefined when calling completeResetPassword().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/password/set-new`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CompleteResetPasswordRequestBodyToJSON(requestParameters['completeResetPasswordRequestBody']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CompleteResetPassword200ResponseFromJSON(jsonValue));
    }

    /**
     * Reset password by email
     */
    async completeResetPassword(requestParameters: CompleteResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompleteResetPassword200Response> {
        const response = await this.completeResetPasswordRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Reset password by email
     */
    async resetPasswordByEmailRaw(requestParameters: ResetPasswordByEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResetPasswordByEmail200Response>> {
        if (requestParameters['resetPasswordByEmailRequestBody'] == null) {
            throw new runtime.RequiredError(
                'resetPasswordByEmailRequestBody',
                'Required parameter "resetPasswordByEmailRequestBody" was null or undefined when calling resetPasswordByEmail().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/password/reset`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ResetPasswordByEmailRequestBodyToJSON(requestParameters['resetPasswordByEmailRequestBody']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResetPasswordByEmail200ResponseFromJSON(jsonValue));
    }

    /**
     * Reset password by email
     */
    async resetPasswordByEmail(requestParameters: ResetPasswordByEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResetPasswordByEmail200Response> {
        const response = await this.resetPasswordByEmailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
