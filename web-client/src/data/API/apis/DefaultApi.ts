/* tslint:disable */
/* eslint-disable */
/**
 * Demo Booking API
 * Describes the API of Daily Tasks
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiPublicAuthTokenPostRequest,
  ApiPublicAuthTokenVerifyPostRequest,
  GetTokenResponse,
  SignUpResponse,
} from '../models/index';
import {
    ApiPublicAuthTokenPostRequestFromJSON,
    ApiPublicAuthTokenPostRequestToJSON,
    ApiPublicAuthTokenVerifyPostRequestFromJSON,
    ApiPublicAuthTokenVerifyPostRequestToJSON,
    GetTokenResponseFromJSON,
    GetTokenResponseToJSON,
    SignUpResponseFromJSON,
    SignUpResponseToJSON,
} from '../models/index';

export interface ApiPublicAuthTokenPostOperationRequest {
    apiPublicAuthTokenPostRequest: ApiPublicAuthTokenPostRequest;
}

export interface ApiPublicAuthTokenVerifyPostOperationRequest {
    apiPublicAuthTokenVerifyPostRequest: ApiPublicAuthTokenVerifyPostRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Sign up a new user
     */
    async apiPublicAuthSignUpPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SignUpResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/auth/sign-up`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SignUpResponseFromJSON(jsonValue));
    }

    /**
     * Sign up a new user
     */
    async apiPublicAuthSignUpPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SignUpResponse> {
        const response = await this.apiPublicAuthSignUpPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get a new pair of tokens (access, refresh)
     */
    async apiPublicAuthTokenPostRaw(requestParameters: ApiPublicAuthTokenPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTokenResponse>> {
        if (requestParameters['apiPublicAuthTokenPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiPublicAuthTokenPostRequest',
                'Required parameter "apiPublicAuthTokenPostRequest" was null or undefined when calling apiPublicAuthTokenPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/auth/token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiPublicAuthTokenPostRequestToJSON(requestParameters['apiPublicAuthTokenPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetTokenResponseFromJSON(jsonValue));
    }

    /**
     * Get a new pair of tokens (access, refresh)
     */
    async apiPublicAuthTokenPost(requestParameters: ApiPublicAuthTokenPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTokenResponse> {
        const response = await this.apiPublicAuthTokenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Check if a token is valid
     */
    async apiPublicAuthTokenVerifyPostRaw(requestParameters: ApiPublicAuthTokenVerifyPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['apiPublicAuthTokenVerifyPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiPublicAuthTokenVerifyPostRequest',
                'Required parameter "apiPublicAuthTokenVerifyPostRequest" was null or undefined when calling apiPublicAuthTokenVerifyPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/auth/token/verify`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiPublicAuthTokenVerifyPostRequestToJSON(requestParameters['apiPublicAuthTokenVerifyPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Check if a token is valid
     */
    async apiPublicAuthTokenVerifyPost(requestParameters: ApiPublicAuthTokenVerifyPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicAuthTokenVerifyPostRaw(requestParameters, initOverrides);
    }

}
