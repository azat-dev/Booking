# Application Name
spring.application.name=users_microservice
server.port=0

# Eureka Configuration
eureka.client.enabled=false

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/usersdb
spring.datasource.username=username
spring.datasource.password=password

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:/schema.sql

# JWT Configuration
app.security.jwt.public-key=classpath:keys/public_key.pub
app.security.jwt.private-key=classpath:keys/private_key.key
app.security.jwt.access-token-expires-in=7d
app.security.jwt.refresh-token-expires-in=30d

# Mail Configuration
app.email-server.username=username
app.email-server.password=password
app.email-server.host=0.0.0.0
app.email-server.port=1025
app.email-server.protocol=smtp

# Verification Email Configuration
app.email-verification.token-expires-in=1h
app.email-verification.send-email-from-name=username
app.email-verification.send-email-from-address=noreply@mail.com
app.email-verification.base-url-for-verification-link=http://localhost:8080/api/public/verify-email

# Reset Password Configuration
app.reset-password.token-expires-in=1h
app.reset-password.send-email-from-name=username
app.reset-password.send-email-from-address=noreply@resetpassword.com
app.reset-password.send-email-subject=Reset your password
app.reset-password.base-url-for-link=http://localhost:3000/reset-password

# Objects Storage Configuration (users-photo bucket)
app.objects-storage.bucket.users-photo.upload-url-expires-in=5s
app.objects-storage.bucket.users-photo.endpoint=http://localhost:9000
app.objects-storage.bucket.users-photo.name=users-photo
app.objects-storage.bucket.users-photo.access-key=minio-root-user
app.objects-storage.bucket.users-photo.secret-key=minio-root-password

# Users
app.users.prometheus.username=prometheus-user
app.users.prometheus.password=prometheus-password

# Kafka Configuration
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=users-ms-group

# Management Endpoints Configuration
management.endpoints.web.exposure.include=prometheus,health,info
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logging Configuration
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

app.loki-url=${USERS_MS_LOKI_URL:http://localhost:3100}

# Bus Configuration
app.bus.user-events-topic=com.azat4dev.usersms.events.user_events_stream
app.bus.prefix-for-internal-commands-topic=com.azat4dev.usersms.commands.internal