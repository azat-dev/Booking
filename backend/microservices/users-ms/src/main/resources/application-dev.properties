# Application Name
spring.application.name=users-ms
server.port=${USERS_MS_PORT:8080}

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://${USERS_MS_DB_HOST}:${USERS_MS_DB_PORT}/${USERS_MS_DB_NAME}
spring.datasource.username=${USERS_MS_DB_USERNAME:username}
spring.datasource.password=${USERS_MS_DB_PASSWORD:password}

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:/schema.sql

# Kafka Configuration
spring.kafka.bootstrap-servers=${USERS_MS_KAFKA_SERVER:localhost:9092}
spring.kafka.consumer.group-id=${USERS_MS_KAFKA_CONSUMER_GROUP_ID:users-ms-group}

# JWT Configuration
app.security.jwt.public-key=classpath:keys/public_key.pub
app.security.jwt.private-key=classpath:keys/private_key.key
app.security.jwt.access-token-expires-in=7d
app.security.jwt.refresh-token-expires-in=30d

# Mail Configuration
app.email-server.username=${USERS_MS_MAIL_SERVER_USERNAME:username}
app.email-server.password=${USERS_MS_MAIL_SERVER_PASSWORD:password}
app.email-server.host=${USERS_MS_MAIL_SERVER_HOST:0.0.0.0}
app.email-server.port=${USERS_MS_MAIL_SERVER_PORT:1025}
app.email-server.protocol=${USERS_MS_MAIL_SERVER_PROTOCOL:smtp}

# Verification Email Configuration
app.email-verification.token-expires-in=${USERS_MS_EMAIL_VERIFICATION_TOKEN_EXPIRES_IN:1d}
app.email-verification.send-email-from-name=${USERS_MS_EMAIL_VERIFICATION_SEND_EMAIL_FROM_NAME:username}
app.email-verification.send-email-from-address=${USERS_MS_EMAIL_VERIFICATION_SEND_EMAIL_FROM_ADDRESS:noreply@mail.com}
app.email-verification.base-url-for-verification-link=${USERS_MS_EMAIL_VERIFICATION_BASE_URL_FOR_VERIFICATION_LINK:http://localhost:8080/api/public/verify-email}

# Reset Password Configuration
app.reset-password.token-expires-in=${USERS_MS_RESET_PASSWORD_TOKEN_EXPIRES_IN:1h}
app.reset-password.send-email-from-name=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_FROM_NAME:username}
app.reset-password.send-email-from-address=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_FROM_ADDRESS:noreply@resetpassword.com}
app.reset-password.send-email-subject=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_SUBJECT:Reset your password}
app.reset-password.base-url-for-link=${USERS_MS_RESET_PASSWORD_BASE_URL_FOR_LINK::http://localhost:3000/reset-password}

# Objects Storage Configuration (users-photo bucket)
app.objects-storage.bucket.users-photo.upload-url-expires-in=${USERS_MS_PHOTO_UPLOAD_URL_EXPIRES_IN:300s}
app.objects-storage.bucket.users-photo.endpoint=${USERS_MS_PHOTO_ENDPOINT:http://localhost:9000}
app.objects-storage.bucket.users-photo.name=${USERS_MS_PHOTO_BUCKET_NAME:users-photo}
app.objects-storage.bucket.users-photo.access-key=${USERS_MS_MINIO_ACCESS_KEY:minio-root-user}
app.objects-storage.bucket.users-photo.secret-key=${USERS_MS_MINIO_SECRET_KEY:minio-root-password}

# Management Endpoints Configuration
management.endpoints.web.exposure.include=*

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=${USERS_MS_EUREKA:http://127.0.0.1:8761}/eureka/