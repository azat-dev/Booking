# Application Name
spring.application.name=users-ms
server.port=${USERS_MS_PORT}

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://${USERS_MS_DB_HOST}:${USERS_MS_DB_PORT}/${USERS_MS_DB_NAME}
spring.datasource.username=${USERS_MS_DB_USERNAME}
spring.datasource.password=${USERS_MS_DB_PASSWORD}

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:/schema.sql

# Kafka Configuration
spring.kafka.bootstrap-servers=${USERS_MS_KAFKA_SERVER}
spring.kafka.consumer.group-id=${USERS_MS_KAFKA_CONSUMER_GROUP_ID}

# JWT Configuration
app.security.jwt.publicKey=classpath:keys/public_key.pub
app.security.jwt.privateKey=classpath:keys/private_key.key
app.security.jwt.access-token-expires-in=7d
app.security.jwt.refresh-token-expires-in=30d

# Mail Configuration
app.email-server.username=${USERS_MS_MAIL_SERVER_USERNAME}
app.email-server.password=${USERS_MS_MAIL_SERVER_PASSWORD}
app.email-server.host=${USERS_MS_MAIL_SERVER_HOST}
app.email-server.port=${USERS_MS_MAIL_SERVER_PORT}
app.email-server.protocol=${USERS_MS_MAIL_SERVER_PROTOCOL}

# Verification Email Configuration
app.email-verification.token-expires-in=${USERS_MS_EMAIL_VERIFICATION_TOKEN_EXPIRES_IN}
app.email-verification.send-email-from-name=${USERS_MS_EMAIL_VERIFICATION_SEND_EMAIL_FROM_NAME}
app.email-verification.send-email-from-address=${USERS_MS_EMAIL_VERIFICATION_SEND_EMAIL_FROM_ADDRESS}
app.email-verification.base-url-for-verification-link=${USERS_MS_EMAIL_VERIFICATION_BASE_URL_FOR_VERIFICATION_LINK}

# Reset Password Configuration
app.reset-password.token-expires-in=${USERS_MS_RESET_PASSWORD_TOKEN_EXPIRES_IN}
app.reset-password.send-email-from-name=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_FROM_NAME}
app.reset-password.send-email-from-address=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_FROM_ADDRESS}
app.reset-password.send-email-subject=${USERS_MS_RESET_PASSWORD_OUTGOING_EMAIL_SUBJECT}
app.reset-password.base-url-for-link=${USERS_MS_RESET_PASSWORD_BASE_URL_FOR_LINK}

# Objects Storage Configuration (users-photo bucket)
app.objects-storage.bucket.users-photo.upload-url-expires-in=${USERS_MS_PHOTO_UPLOAD_URL_EXPIRES_IN}
app.objects-storage.bucket.users-photo.endpoint=${USERS_MS_PHOTO_ENDPOINT}
app.objects-storage.bucket.users-photo.name=${USERS_MS_PHOTO_BUCKET_NAME}
app.objects-storage.bucket.users-photo.access-key=${USERS_MS_MINIO_ACCESS_KEY}
app.objects-storage.bucket.users-photo.secret-key=${USERS_MS_MINIO_SECRET_KEY}

# Users
app.users.prometheus.username=${USERS_MS_PROMETHEUS_USERNAME}
app.users.prometheus.password=${USERS_MS_PROMETHEUS_PASSWORD}

# Metrics Configuration
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus,health,info
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.zipkin.tracing.endpoint=${USERS_MS_ZIPKIN_ENDPOINT}

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

app.loki-url=${USERS_MS_LOKI_URL}

spring.kafka.template.observation-enabled=true
spring.kafka.listener.observation-enabled=true

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=${USERS_MS_EUREKA}

# Bus Configuration
app.bus.prefix-for-events-topics=${USERS_MS_BUS_PREFIX_FOR_EVENTS_TOPICS}
app.bus.user-events-topic-name=${USERS_MS_BUS_USER_EVENTS_TOPIC_NAME}
app.bus.user-events-topic-partitions=${USERS_MS_BUS_USER_EVENTS_TOPIC_PARTITIONS}
app.bus.user-events-topic-replication-factor=${USERS_MS_BUS_USER_EVENTS_TOPIC_REPLICATION_FACTOR}
app.bus.user-events-topic-number-of-consumers=${USERS_MS_BUS_USER_EVENTS_TOPIC_NUMBER_OF_CONSUMERS}

app.bus.internal-commands-topic-partitions=${USERS_MS_BUS_INTERNAL_COMMANDS_TOPIC_PARTITIONS}
app.bus.internal-commands-topic-replication-factor=${USERS_MS_BUS_INTERNAL_COMMANDS_TOPIC_REPLICATION_FACTOR}
app.bus.internal-commands-topic-number-of-consumers=${USERS_MS_BUS_INTERNAL_COMMANDS_TOPIC_NUMBER_OF_CONSUMERS}
app.bus.internal-commands-topic-prefix=${USERS_MS_BUS_INTERNAL_COMMANDS_TOPIC_PREFIX}