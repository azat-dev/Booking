/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.azat4dev.booking.usersms.generated.server.api;

import com.azat4dev.booking.usersms.generated.server.model.PersonalUserInfoDTO;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-05-30T09:25:21.695569+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
@Validated
@Tag(name = "queriesCurrentUser", description = "the queriesCurrentUser API")
public interface QueriesCurrentUserApi {

    default QueriesCurrentUserApiDelegate getDelegate() {
        return new QueriesCurrentUserApiDelegate() {};
    }

    /**
     * GET /api/with-auth/users/current : Gets current user info
     *
     * @return Current users info (status code 200)
     *         or User not authenticated (status code 401)
     *         or User not found (status code 404)
     */
    @Operation(
        operationId = "getCurrentUser",
        summary = "Gets current user info",
        tags = { "queriesCurrentUser" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Current users info", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PersonalUserInfoDTO.class))
            }),
            @ApiResponse(responseCode = "401", description = "User not authenticated"),
            @ApiResponse(responseCode = "404", description = "User not found")
        },
        security = {
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/with-auth/users/current",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PersonalUserInfoDTO> getCurrentUser(
        
    ) {
        return getDelegate().getCurrentUser();
    }

}
