/*
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azat4dev.booking.usersms.generated.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.azat4dev.booking.usersms.generated.client.model.UploadedFileDataDTO;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateUserPhotoRequestBodyDTO
 */
@JsonPropertyOrder({
  UpdateUserPhotoRequestBodyDTO.JSON_PROPERTY_OPERATION_ID,
  UpdateUserPhotoRequestBodyDTO.JSON_PROPERTY_UPLOADED_FILE
})
@JsonTypeName("UpdateUserPhotoRequestBody")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-14T09:11:45.773021+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class UpdateUserPhotoRequestBodyDTO {
  public static final String JSON_PROPERTY_OPERATION_ID = "operationId";
  private UUID operationId;

  public static final String JSON_PROPERTY_UPLOADED_FILE = "uploadedFile";
  private UploadedFileDataDTO uploadedFile;

  public UpdateUserPhotoRequestBodyDTO() {
  }

  /**
  * Constructor with all args parameters
  */
  public UpdateUserPhotoRequestBodyDTO(@JsonProperty(JSON_PROPERTY_OPERATION_ID) UUID operationId, @JsonProperty(JSON_PROPERTY_UPLOADED_FILE) UploadedFileDataDTO uploadedFile) {
    this.operationId = operationId;
    this.uploadedFile = uploadedFile;
  }

  public UpdateUserPhotoRequestBodyDTO operationId(UUID operationId) {
    
    this.operationId = operationId;
    return this;
  }

   /**
   * Get operationId
   * @return operationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getOperationId() {
    return operationId;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperationId(UUID operationId) {
    this.operationId = operationId;
  }

  public UpdateUserPhotoRequestBodyDTO uploadedFile(UploadedFileDataDTO uploadedFile) {
    
    this.uploadedFile = uploadedFile;
    return this;
  }

   /**
   * Get uploadedFile
   * @return uploadedFile
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPLOADED_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UploadedFileDataDTO getUploadedFile() {
    return uploadedFile;
  }


  @JsonProperty(JSON_PROPERTY_UPLOADED_FILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUploadedFile(UploadedFileDataDTO uploadedFile) {
    this.uploadedFile = uploadedFile;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateUserPhotoRequestBodyDTO updateUserPhotoRequestBody = (UpdateUserPhotoRequestBodyDTO) o;
    return Objects.equals(this.operationId, updateUserPhotoRequestBody.operationId) &&
        Objects.equals(this.uploadedFile, updateUserPhotoRequestBody.uploadedFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationId, uploadedFile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateUserPhotoRequestBodyDTO {\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    uploadedFile: ").append(toIndentedString(uploadedFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private UpdateUserPhotoRequestBodyDTO instance;

    public Builder() {
      this(new UpdateUserPhotoRequestBodyDTO());
    }

    protected Builder(UpdateUserPhotoRequestBodyDTO instance) {
      this.instance = instance;
    }

    public UpdateUserPhotoRequestBodyDTO.Builder operationId(UUID operationId) {
      this.instance.operationId = operationId;
      return this;
    }
    public UpdateUserPhotoRequestBodyDTO.Builder uploadedFile(UploadedFileDataDTO uploadedFile) {
      this.instance.uploadedFile = uploadedFile;
      return this;
    }


    /**
    * returns a built UpdateUserPhotoRequestBodyDTO instance.
    *
    * The builder is not reusable.
    */
    public UpdateUserPhotoRequestBodyDTO build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static UpdateUserPhotoRequestBodyDTO.Builder builder() {
    return new UpdateUserPhotoRequestBodyDTO.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public UpdateUserPhotoRequestBodyDTO.Builder toBuilder() {
    return new UpdateUserPhotoRequestBodyDTO.Builder()
      .operationId(getOperationId())
      .uploadedFile(getUploadedFile());
  }


}

