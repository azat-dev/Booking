/*
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azat4dev.booking.usersms.generated.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.azat4dev.booking.usersms.generated.client.model.ValidationErrorDetailsDTO;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ValidationErrorDTO
 */
@JsonPropertyOrder({
  ValidationErrorDTO.JSON_PROPERTY_TYPE,
  ValidationErrorDTO.JSON_PROPERTY_ERRORS
})
@JsonTypeName("ValidationError")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-14T09:11:45.773021+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class ValidationErrorDTO {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "validationError";

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<ValidationErrorDetailsDTO> errors = new ArrayList<>();

  public ValidationErrorDTO() {
  }

  /**
  * Constructor with all args parameters
  */
  public ValidationErrorDTO(@JsonProperty(JSON_PROPERTY_TYPE) String type, @JsonProperty(JSON_PROPERTY_ERRORS) List<ValidationErrorDetailsDTO> errors) {
    this.type = type;
    this.errors = errors;
  }

  public ValidationErrorDTO type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }

  public ValidationErrorDTO errors(List<ValidationErrorDetailsDTO> errors) {
    
    this.errors = errors;
    return this;
  }

  public ValidationErrorDTO addErrorsItem(ValidationErrorDetailsDTO errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ValidationErrorDetailsDTO> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrors(List<ValidationErrorDetailsDTO> errors) {
    this.errors = errors;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidationErrorDTO validationError = (ValidationErrorDTO) o;
    return Objects.equals(this.type, validationError.type) &&
        Objects.equals(this.errors, validationError.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidationErrorDTO {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private ValidationErrorDTO instance;

    public Builder() {
      this(new ValidationErrorDTO());
    }

    protected Builder(ValidationErrorDTO instance) {
      this.instance = instance;
    }

    public ValidationErrorDTO.Builder type(String type) {
      this.instance.type = type;
      return this;
    }
    public ValidationErrorDTO.Builder errors(List<ValidationErrorDetailsDTO> errors) {
      this.instance.errors = errors;
      return this;
    }


    /**
    * returns a built ValidationErrorDTO instance.
    *
    * The builder is not reusable.
    */
    public ValidationErrorDTO build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static ValidationErrorDTO.Builder builder() {
    return new ValidationErrorDTO.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public ValidationErrorDTO.Builder toBuilder() {
    return new ValidationErrorDTO.Builder()
      .type(getType())
      .errors(getErrors());
  }


}

