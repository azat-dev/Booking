/*
 * Users  API
 * Describes the API of Users Endpoint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azat4dev.booking.usersms.generated.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.azat4dev.booking.usersms.generated.client.model.EmailVerificationStatusDTO;
import com.azat4dev.booking.usersms.generated.client.model.FullNameDTO;
import com.azat4dev.booking.usersms.generated.client.model.PhotoPathDTO;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PersonalUserInfoDTO
 */
@JsonPropertyOrder({
  PersonalUserInfoDTO.JSON_PROPERTY_ID,
  PersonalUserInfoDTO.JSON_PROPERTY_FULL_NAME,
  PersonalUserInfoDTO.JSON_PROPERTY_EMAIL,
  PersonalUserInfoDTO.JSON_PROPERTY_PHOTO,
  PersonalUserInfoDTO.JSON_PROPERTY_EMAIL_VERIFICATION_STATUS
})
@JsonTypeName("PersonalUserInfo")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-14T09:11:45.773021+03:00[Europe/Moscow]", comments = "Generator version: 7.6.0")
public class PersonalUserInfoDTO {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private FullNameDTO fullName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHOTO = "photo";
  private PhotoPathDTO photo;

  public static final String JSON_PROPERTY_EMAIL_VERIFICATION_STATUS = "emailVerificationStatus";
  private EmailVerificationStatusDTO emailVerificationStatus;

  public PersonalUserInfoDTO() {
  }

  /**
  * Constructor with all args parameters
  */
  public PersonalUserInfoDTO(@JsonProperty(JSON_PROPERTY_ID) UUID id, @JsonProperty(JSON_PROPERTY_FULL_NAME) FullNameDTO fullName, @JsonProperty(JSON_PROPERTY_EMAIL) String email, @JsonProperty(JSON_PROPERTY_PHOTO) PhotoPathDTO photo, @JsonProperty(JSON_PROPERTY_EMAIL_VERIFICATION_STATUS) EmailVerificationStatusDTO emailVerificationStatus) {
    this.id = id;
    this.fullName = fullName;
    this.email = email;
    this.photo = photo;
    this.emailVerificationStatus = emailVerificationStatus;
  }

  public PersonalUserInfoDTO id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }

  public PersonalUserInfoDTO fullName(FullNameDTO fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FullNameDTO getFullName() {
    return fullName;
  }


  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFullName(FullNameDTO fullName) {
    this.fullName = fullName;
  }

  public PersonalUserInfoDTO email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }

  public PersonalUserInfoDTO photo(PhotoPathDTO photo) {
    
    this.photo = photo;
    return this;
  }

   /**
   * Get photo
   * @return photo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhotoPathDTO getPhoto() {
    return photo;
  }


  @JsonProperty(JSON_PROPERTY_PHOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoto(PhotoPathDTO photo) {
    this.photo = photo;
  }

  public PersonalUserInfoDTO emailVerificationStatus(EmailVerificationStatusDTO emailVerificationStatus) {
    
    this.emailVerificationStatus = emailVerificationStatus;
    return this;
  }

   /**
   * Get emailVerificationStatus
   * @return emailVerificationStatus
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFICATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmailVerificationStatusDTO getEmailVerificationStatus() {
    return emailVerificationStatus;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFICATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailVerificationStatus(EmailVerificationStatusDTO emailVerificationStatus) {
    this.emailVerificationStatus = emailVerificationStatus;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalUserInfoDTO personalUserInfo = (PersonalUserInfoDTO) o;
    return Objects.equals(this.id, personalUserInfo.id) &&
        Objects.equals(this.fullName, personalUserInfo.fullName) &&
        Objects.equals(this.email, personalUserInfo.email) &&
        Objects.equals(this.photo, personalUserInfo.photo) &&
        Objects.equals(this.emailVerificationStatus, personalUserInfo.emailVerificationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fullName, email, photo, emailVerificationStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalUserInfoDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    emailVerificationStatus: ").append(toIndentedString(emailVerificationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private PersonalUserInfoDTO instance;

    public Builder() {
      this(new PersonalUserInfoDTO());
    }

    protected Builder(PersonalUserInfoDTO instance) {
      this.instance = instance;
    }

    public PersonalUserInfoDTO.Builder id(UUID id) {
      this.instance.id = id;
      return this;
    }
    public PersonalUserInfoDTO.Builder fullName(FullNameDTO fullName) {
      this.instance.fullName = fullName;
      return this;
    }
    public PersonalUserInfoDTO.Builder email(String email) {
      this.instance.email = email;
      return this;
    }
    public PersonalUserInfoDTO.Builder photo(PhotoPathDTO photo) {
      this.instance.photo = photo;
      return this;
    }
    public PersonalUserInfoDTO.Builder emailVerificationStatus(EmailVerificationStatusDTO emailVerificationStatus) {
      this.instance.emailVerificationStatus = emailVerificationStatus;
      return this;
    }


    /**
    * returns a built PersonalUserInfoDTO instance.
    *
    * The builder is not reusable.
    */
    public PersonalUserInfoDTO build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /**
  * Create a builder with no initialized field.
  */
  public static PersonalUserInfoDTO.Builder builder() {
    return new PersonalUserInfoDTO.Builder();
  }

  /**
  * Create a builder with a shallow copy of this instance.
  */
  public PersonalUserInfoDTO.Builder toBuilder() {
    return new PersonalUserInfoDTO.Builder()
      .id(getId())
      .fullName(getFullName())
      .email(getEmail())
      .photo(getPhoto())
      .emailVerificationStatus(getEmailVerificationStatus());
  }


}

