openapi: 3.0.3
info:
  title: Listings Microservice Domain Events API
  version: 1.0.0
paths:
  /do_nothing:
    get:
      summary: Does nothing
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    ListingsDomainEvent:
      type: object
      required:
        - domain
        - eventId
        - occurredAt
        - eventType
        - payload
      properties:
        domain:
          type: string
          enum:
            - LISTINGS
          default: LISTINGS
        eventId:
          type: string
        occurredAt:
          type: integer
          format: int64
        payload:
          $ref: '#/components/schemas/ListingsDomainEventPayload'

    ListingsDomainEventPayload:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/NewListingAdded"
        - $ref: "#/components/schemas/FailedToAddNewListing"
        - $ref: "#/components/schemas/ListingDetailsUpdated"

        - $ref: "#/components/schemas/GeneratedUrlForUploadListingPhoto"
        - $ref: "#/components/schemas/FailedGenerateUrlForUploadListingPhoto"
        - $ref: "#/components/schemas/AddedNewPhotoToListing"

    NewListingAdded:
      type: object
      required:
        - hostId
        - listingId
        - title
      properties:
        operationId:
          $ref: "../common/models/OperationId.yaml"
        hostId:
          $ref: "#/components/schemas/HostId"
        listingId:
          $ref: "#/components/schemas/ListingId"
        title:
          type: string

    FailedToAddNewListing:
      type: object
      required:
        - hostId
        - listingId
        - title
      properties:
        hostId:
          $ref: "#/components/schemas/HostId"
        listingId:
          $ref: "#/components/schemas/ListingId"
        title:
          type: string

    GeneratedUrlForUploadListingPhoto:
      type: object
      required:
        - userId
        - listingId
        - formData
      properties:
        operationId:
          $ref: "../common/models/OperationId.yaml"
        userId:
          $ref: "#/components/schemas/UserId"
        listingId:
          $ref: "#/components/schemas/ListingId"
        formData:
          $ref: "#/components/schemas/UploadFileFormData"

    UploadFileFormData:
      type: object
      required:
        - url
        - bucketName
        - objectName
        - fields
      properties:
        url:
          type: string
          format: uri
        bucketName:
          type: string
        objectName:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string

    FailedGenerateUrlForUploadListingPhoto:
      type: object
      required:
        - operationId
        - userId
        - listingId
        - fileExtension
        - fileSize
      properties:
        operationId:
          $ref: "../common/models/OperationId.yaml"
        userId:
          $ref: "#/components/schemas/UserId"
        listingId:
          $ref: "#/components/schemas/ListingId"
        fileExtension:
          type: string
        fileSize:
          type: integer

    AddedNewPhotoToListing:
      type: object
      required:
        - listingId
        - photo
      properties:
        listingId:
          $ref: "#/components/schemas/ListingId"
        photo:
          $ref: "#/components/schemas/ListingPhoto"

    ListingPhoto:
      type: object
      required:
        - id
        - bucketName
        - objectName
      properties:
        id:
          type: string
        bucketName:
          type: string
        objectName:
          type: string

    ListingDetailsUpdated:
      type: object
      required:
        - listingId
        - updatedAt
        - prevValues
        - newValues
      properties:
        listingId:
          $ref: "#/components/schemas/ListingId"
        updatedAt:
          type: integer
          format: int64
        prevValues:
          $ref: "#/components/schemas/ListingDetailsFields"
        newValues:
          $ref: "#/components/schemas/ListingDetailsFields"

    ListingDetailsFields:
      type: object
      properties:
        status:
          nullable: true
          anyOf:
            - $ref: "../../listings/common/models/ListingStatus.yaml"
        title:
          nullable: true
          type: string
        description:
          type: string
          nullable: true
        guestCapacity:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/GuestsCapacity"
        propertyType:
          nullable: true
          allOf:
            - $ref: "../../listings/common/models/PropertyType.yaml"
        roomType:
          nullable: true
          allOf:
            - $ref: "../../listings/common/models/RoomType.yaml"
        address:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Address"

    Address:
      type: object
      required:
        - country
        - city
        - street
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string

    GuestsCapacity:
      type: object
      required:
        - adults
        - children
        - infants
      properties:
        adults:
          type: integer
        children:
          type: integer
        infants:
          type: integer

    ListingId:
      type: string
      format: uuid

    UserId:
      type: string
      format: uuid

    HostId:
      $ref: "#/components/schemas/UserId"