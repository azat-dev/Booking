openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Listings API"
  description: Describes the API of Listings service

paths:
  /api/private/listings/{listingId}:
    get:
      operationId: getListingPrivateDetails
      summary: Get private details for listing
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Listing ID
      responses:
        "200":
          description: Private details of listing
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetListingPrivateDetailsResponse"
        "401":
          description: Not valid Token
        "404":
          description: Not found

  /api/private/listings:
    post:
      summary: Add a new listing
      operationId: addListing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddListingRequestBody"
      responses:
        "200":
          description: Listing added successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddListingResponse"
        "401":
          description: Not valid Token
        "404":
          description: Not found
components:
  schemas:
    GetListingPrivateDetailsResponse:
      type: object
      required:
          - listing
      properties:
        listing:
          $ref: "#/components/schemas/ListingPrivateDetails"

    ListingPrivateDetails:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string

    AddListingRequestBody:
      type: object
      required:
        - operationId
        - title
      properties:
        operationId:
          type: string
          format: uuid
        title:
          type: string
    AddListingResponse:
      type: object
      required:
        - listingId
      properties:
        listingId:
          type: string
          format: uuid

    LocationDetails:
      type: object
      required:
        - country
        - city
      properties:
        country:
          type: string
        city:
          type: string
    ListingDetails:
      type: object
      required:
        - id
        - title
        - type
        - description
        - photos
        - location
        - hostId
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        photos:
          type: array
          items:
            type: string
            format: uri
        location:
          $ref: "#/components/schemas/LocationDetails"
        hostId:
          type: string
          format: uuid
    ValidationError:
      type: object
      required:
        - type
        - errors
      properties:
        type:
          type: string
          default: validationError
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationErrorDetails"
    ValidationErrorDetails:
      type: object
      required:
        - path
        - message
        - code
      properties:
        path:
          type: string
        message:
          type: string
        code:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
    Errors:
      type: array
      items:
        $ref: "#/components/schemas/Error"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: [ ]
