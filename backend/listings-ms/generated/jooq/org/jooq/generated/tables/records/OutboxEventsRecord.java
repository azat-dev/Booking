/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import jakarta.annotation.Nullable;

import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.generated.tables.OutboxEvents;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OutboxEventsRecord extends UpdatableRecordImpl<OutboxEventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.outbox_events.event_order</code>.
     */
    public void setEventOrder(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.outbox_events.event_order</code>.
     */
    @Nullable
    public Long getEventOrder() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.outbox_events.event_id</code>.
     */
    public void setEventId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.outbox_events.event_id</code>.
     */
    public String getEventId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.outbox_events.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.outbox_events.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.outbox_events.created_at_nano</code>.
     */
    public void setCreatedAtNano(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.outbox_events.created_at_nano</code>.
     */
    public Integer getCreatedAtNano() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.outbox_events.event_type</code>.
     */
    public void setEventType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.outbox_events.event_type</code>.
     */
    public String getEventType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.outbox_events.payload</code>.
     */
    public void setPayload(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.outbox_events.payload</code>.
     */
    public String getPayload() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.outbox_events.is_published</code>.
     */
    public void setIsPublished(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.outbox_events.is_published</code>.
     */
    public Boolean getIsPublished() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OutboxEventsRecord
     */
    public OutboxEventsRecord() {
        super(OutboxEvents.OUTBOX_EVENTS);
    }

    /**
     * Create a detached, initialised OutboxEventsRecord
     */
    public OutboxEventsRecord(@Nullable Long eventOrder, String eventId, LocalDateTime createdAt, Integer createdAtNano, String eventType, String payload, Boolean isPublished) {
        super(OutboxEvents.OUTBOX_EVENTS);

        setEventOrder(eventOrder);
        setEventId(eventId);
        setCreatedAt(createdAt);
        setCreatedAtNano(createdAtNano);
        setEventType(eventType);
        setPayload(payload);
        setIsPublished(isPublished);
        resetChangedOnNotNull();
    }
}
