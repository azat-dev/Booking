spring.application.name=listings-ms
server.port=${LISTINGS_MS_PORT}

spring.datasource.url=jdbc:postgresql://${LISTINGS_MS_DB_HOST}:${LISTINGS_MS_DB_PORT}/${LISTINGS_MS_DB_NAME}
spring.datasource.username=${LISTINGS_MS_DB_USERNAME}
spring.datasource.password=${LISTINGS_MS_DB_PASSWORD}

# Kafka Configuration
spring.kafka.bootstrap-servers=${LISTINGS_MS_KAFKA_SERVER}
spring.kafka.consumer.group-id=${LISTINGS_MS_KAFKA_CONSUMER_GROUP_ID}

spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:/db/schema.sql

app.security.jwt.publicKey=classpath:keys/public_key.pub

# Objects Storage Configuration (listings-photo bucket)
app.objects-storage.bucket.listings-photo.endpoint=${LISTINGS_MS_PHOTO_ENDPOINT}
app.objects-storage.bucket.listings-photo.name=${LISTINGS_MS_PHOTO_BUCKET_NAME}
app.objects-storage.bucket.listings-photo.access-key=${LISTINGS_MS_MINIO_ACCESS_KEY}
app.objects-storage.bucket.listings-photo.secret-key=${LISTINGS_MS_MINIO_SECRET_KEY}
app.objects-storage.bucket.listings-photo.upload-url-expires-in=${LISTINGS_MS_PHOTO_UPLOAD_URL_EXPIRES_IN}

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=${LISTINGS_MS_EUREKA}
